# Cost-Optimized GKE Cluster Configuration
apiVersion: container.cnrm.cloud.google.com/v1beta1
kind: ContainerCluster
metadata:
  name: careercompass-cluster
  annotations:
    cnrm.cloud.google.com/remove-default-node-pool: "true"
spec:
  location: us-central1-a  # Cheapest region
  initialNodeCount: 1
  minMasterVersion: "1.28"
  network: "default"
  subnetwork: "default"
  nodeConfig:
    machineType: "e2-micro"  # Smallest instance (1 vCPU, 1GB RAM)
    diskSizeGb: 20           # Minimal disk
    diskType: "pd-standard"  # Standard disk (cheaper)
    imageType: "COS_CONTAINERD"
    oauthScopes:
      - "https://www.googleapis.com/auth/cloud-platform"
    serviceAccount: "default"
  nodePools:
  - name: "cost-optimized-pool"
    initialNodeCount: 1
    autoscaling:
      enabled: true
      minNodeCount: 0        # Scale to zero when not in use
      maxNodeCount: 2        # Limit max nodes
    management:
      autoRepair: true
      autoUpgrade: true
    nodeConfig:
      machineType: "e2-micro"  # $6.11/month per node
      diskSizeGb: 20
      diskType: "pd-standard"
      imageType: "COS_CONTAINERD"
      preemptible: true        # 60-80% cheaper but can be terminated
      oauthScopes:
        - "https://www.googleapis.com/auth/cloud-platform"
---
# Cost-Optimized Mock Data API
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mock-data-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mock-data-api
  template:
    metadata:
      labels:
        app: mock-data-api
    spec:
      containers:
      - name: mock-data-api
        image: gcr.io/careercompass-prototype/mock-data-api:v1
        ports:
        - containerPort: 8080
        resources:
          requests:
            memory: "64Mi"      # Minimal memory
            cpu: "50m"          # Minimal CPU
          limits:
            memory: "128Mi"     # Small limit
            cpu: "100m"         # Small limit
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: mock-data-api-service
spec:
  selector:
    app: mock-data-api
  ports:
  - port: 8080
    targetPort: 8080
  type: ClusterIP
---
# Cost-Optimized AI Agent
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-agent
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ai-agent
  template:
    metadata:
      labels:
        app: ai-agent
    spec:
      containers:
      - name: ai-agent
        image: gcr.io/careercompass-prototype/ai-agent:v2
        ports:
        - containerPort: 8080
        env:
        - name: GEMINI_API_KEY
          valueFrom:
            secretKeyRef:
              name: gemini-secret
              key: api-key
        resources:
          requests:
            memory: "128Mi"     # Minimal memory
            cpu: "100m"         # Minimal CPU
          limits:
            memory: "256Mi"     # Small limit
            cpu: "200m"         # Small limit
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: ai-agent-service
spec:
  selector:
    app: ai-agent
  ports:
  - port: 8080
    targetPort: 8080
  type: LoadBalancer
---
# Horizontal Pod Autoscaler for cost optimization
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: mock-data-api-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mock-data-api
  minReplicas: 0        # Scale to zero
  maxReplicas: 2        # Max 2 replicas
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ai-agent-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ai-agent
  minReplicas: 0        # Scale to zero
  maxReplicas: 2        # Max 2 replicas
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
